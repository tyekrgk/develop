var chartNum = function(elements,options){
    this.elements = elements;
    this.codeList = [];
    this.dataPool = {};
    this.options = options || {};
    this.init(elements);
};

chartNum.prototype.init = function(element){
    var that = this;
    $(this.elements).each(function(k, v) {
        that.codeList.push($(v).data('code'));
    });
    that.fetchData();
};

chartNum.prototype.fetchData = function(code,element){
    code = code || this.codeList;
    if (!$.isArray(code) && $.inArray(code, this.codeList) < 0) {
        this.codeList.push(code);
        code = [code];
    }
    var that = this;
    that.showPic(code,element);
    var timer = setInterval(function() {
        clearInterval(timer);
        that.showPic(code,element);
    }, 60000);
};
chartNum.prototype.showPic = function(code,element){
    var that = this;
    if (window.hx_canvas_puredataprovider) {
        var stockList = code;
        var sortProvider = new hx_canvas_puredataprovider({
            url:'http://d.10jqka.com.cn/',
            urlVersion:'v2/time/',
            lastPart: stockList.join(',') + '/last.js',
            isKeepingGet : true,
            intervalTime: 60000,
            callbackName: 'quotebridge_v2_time_' + stockList.join('_') + '_last',
            success:function(d){

                for (var i in d) {
                    var item = d[i];
                    var data = item.data.split(';');
                    for (var j = 0, arr = []; j < data.length; j++) {
                        var dataGroup = data[j].split(',');
                        arr.push([j, + dataGroup[1], dataGroup[0]]);
                    };
                    that.dataPool[i] = item;
                    that.dataPool[i]['data'] = arr;
                }
                that.ready(element);
            }
        });
    }
};
chartNum.prototype.ready = function(element){
    this.drawNum(element || this.elements);
};
chartNum.prototype.drawNum = function(element){
    var that = this;
    $(element).each(function(k,v){
        var code = $(v).data('code');
        if(!code){
            return ;
        }
        if(!that.dataPool[code]){
            that.fetchData(code,element);
            return ;
        }
        var realData = that.dataPool[code].data;
        var realPre = that.dataPool[code].pre;
        var price = realData[realData.length - 1][1];
        $(v).data('stockLastInfo', {
            lastData: {
                pre: realPre,
                price: realData[realData.length - 1][1],
                zde: (price - realPre),
                zdf: (price - realPre) / realPre
            },
            originData: realData
        });
        that.options.drawComplete && that.options.drawComplete($(v));
    });
};
chartNum.prototype.getStockPriceInfo = function(realData, realPre) {
    var extent = function(array, f) {
        var i = - 1,
            n = array.length,
            a, b, c;
        if (arguments.length === 1) {
            while (++i < n && ! ((a = c = array[i]) != null && a <= a)) a = c = undefined;
            while (++i < n) if ((b = array[i]) != null) {
                if (a > b) a = b;
                if (c < b) c = b;
            }
        } else {
            while (++i < n && ! ((a = c = f.call(array, array[i], i)) != null && a <= a)) a = undefined;
            while (++i < n) if ((b = f.call(array, array[i], i)) != null) {
                if (a > b) a = b;
                if (c < b) c = b;
            }
        }
        return [a, c];
    };
    var temp = extent(realData, function(d) {
        return d[1]
    });
    var min = temp[0];
    var max = temp[1];

    if (realPre) {
        var maxDiff = Math.abs(realPre - max);
        var minDiff = Math.abs(realPre - min);
        var realMax = Math.max(maxDiff, minDiff);
        if (min == max) {
            min = realPre * 0.9;
            max = realPre * 1.1;
        } else {
            min = +realPre - realMax;
            max = +realPre + realMax;
        }

    }
    return {
        max: max,
        min: min,
        pre: realPre
    }
};